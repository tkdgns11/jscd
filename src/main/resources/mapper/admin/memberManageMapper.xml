<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--관리자 회원관리-->
<mapper namespace="com.jscd.app.mapper.memberManageMapper">

    <!--    회원 인원수-->
    <select id="count" resultType="int">
        select count(*)
        from Member
    </select>

<!--    회원 + 코드테이블 조인-->
    <sql id="selectMember">
        select m.mebrNO,
               m.id,
               m.name,
               m.birth,
               m.nickname,
               m.pwd,
               g.gender,
               m.phone,
               m.acct,
               s.status,
               d.grade,
               m.regDate,
               m.etc
        from member m
                 join (select ctNum, codeName as gender from allCode where ctId = "G001") g
                      on m.gender = g.ctNum
                 join (select ctNum, codeName as status from allCode where ctId = "M001") s
                      on m.status = s.ctNum
                 join (select ctNum, codeName as grade from allCode where ctId = "M002") d
                      on m.grade = d.ctNum
    </sql>

    <!--    검색 조건 select-->
    <select id="searchSelectPage" parameterType="SearchCondition" resultType="MemberManageDto">
        <include refid="selectMember"/>
        WHERE true
        <include refid="searchCondition"/>
        order by mebrNO
        limit #{offset},#{pageSize};
    </select>

    <!--검색 결과 개수-->
    <select id="searchResultCnt" parameterType="SearchCondition" resultType="int">
        select count(*)
        from member m
        join (select ctNum,codeName as gender from allCode where ctId = "G001") g
        on m.gender = g.ctNum
        join (select ctNum,codeName as status from allCode where ctId = "M001") s
        on m.status = s.ctNum
        join (select ctNum,codeName as grade from allCode where ctId = "M002") d
        on m.grade = d.ctNum
        <include refid="searchCondition"/>
    </select>

    <!-- 회원 전체 정보-->
    <select id="selectAll" parameterType="Map" resultType="MemberDto">
        <include refid="selectMember"/>
        order by mebrNO asc
        limit #{offset}, #{pageSize}
    </select>

    <!--회원 상세정보-->
    <select id="select" parameterType="Integer" resultType="MemberManageDto">
        <include refid="selectMember"/>
        where mebrNO = #{mebrNO}
    </select>

    <select id="selectMember" parameterType="Integer" resultType="MemberDto">
        select * from member
        where mebrNO = #{mebrNO}
    </select>

    <!-- 메인화면 등급/상태 update (일괄 수정)-->
    <update id="update" parameterType="map">
        update member
        set grade= #{grade}
        ,status = #{status}
        , modifyDate = now()
        where mebrNO in
        <foreach collection="mebrNO" item="mebrNO" open="(" close=")" separator=",">
            #{mebrNO}
        </foreach>
    </update>


    <!-- 상세정보 updqte-->
    <update id="updateDetail" parameterType="MemberDto">
        update member
        set status     = #{status}
          , grade      = #{grade}
          , etc        = #{etc}
          , modifyDate = now()
        where mebrNO = #{mebrNO}
    </update>

    <delete id="delete" parameterType="Integer">
        delete
        from member
        where mebrNO = #{mebrNO}
    </delete>

    <delete id="deleteAll">
        delete
        from member
    </delete>

    <sql id="searchCondition">
        <choose>
            <when test='option=="T"'>
                AND m.name LIKE concat('%', #{keyword}, '%')
            </when>
            <when test='option=="W"'>
                AND m.id LIKE concat('%', #{keyword}, '%')
            </when>
            <when test='option=="R"'>
                and d.grade like concat('%',#{keyword},'%')
            </when>
            <otherwise>
                and s.status like concat('%',#{keyword},'%')
            </otherwise>
        </choose>
    </sql>


</mapper>
