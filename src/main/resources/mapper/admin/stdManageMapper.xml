<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jscd.app.mapper.stdManageMapper">

    <!--부트캠프 결제 or 학생 등급으로 수정 시, 학생테이블로 insert-->
    <insert id="insert" parameterType="StdManageDto">
        insert into stdManage
            (mebrNO, gisu, status,regDate)
        values (#{mebrNO}, #{gisu}, #{status},now())
    </insert>

    <!--    학생 인원수-->
    <select id="count" resultType="int">
        select count(*)
        from stdManage
    </select>

<!--    학생+회원+코드테이블 조인-->
    <sql id="selectStd">
        select m.mebrNO,
               m.name,
               m.id,
               m.birth,
               m.phone,
               m.regDate,
               m.acct,
               s.gisu,
               a.status,
               s.etc
        from member m
                 join stdManage s on s.mebrNO = m.mebrNO
                 join (select ctNum, codeName as status from allCode where ctId = "M003") a
                      on s.status = a.ctNum
    </sql>

    <select id="searchSelectPage" parameterType="SearchCondition" resultType="StdMemberManageDto">
        <include refid="selectStd"/>
        WHERE true
        <include refid="searchCondition"/>
        order by s.mebrNO
        limit #{offset},#{pageSize}
    </select>

    <select id="searchResultCnt" parameterType="SearchCondition" resultType="int">
        select count(*)
        from member m
        join stdManage s
        on s.mebrNO = m.mebrNO
        join (select ctNum,codeName as status from allCode where ctId = "M003") a
        on s.status = a.ctNum
        <include refid="searchCondition"/>
    </select>

    <!--  학생 정보 전체 셀렉-->
    <select id="selectAll" parameterType="map" resultType="StdMemberManageDto">
        <include refid="selectStd"/>
        order by s.mebrNO
        limit #{offset}, #{pageSize};
    </select>

    <!--   상세정보 -->
    <select id="select" parameterType="Integer" resultType="StdMemberManageDto">
        <include refid="selectStd"/>
        where s.mebrNO = #{mebrNO};
    </select>

    <!--상세보기 update-->
    <update id="update" parameterType="StdManageDto">
        update stdManage
        set gisu       = #{gisu}
          , status     = #{status}
          , etc        = #{etc}
          , modifyDate = now()
        where mebrNO = #{mebrNO};
    </update>

<!--    메인화면 상태 update(일괄 수정)-->
    <update id="updateStatus" parameterType="map">
        update stdManage
        set status = ${status}
        , modifyDate = now()
        where mebrNO in
        <foreach collection="mebrNO" item="mebrNO" open="(" close=")" separator=",">
            #{mebrNO}
        </foreach>
    </update>


    <!-- 학생이 수료를 하지 못하고 중도하차 하는 경우(메인 페이지 삭제)-->
    <update id="deleteMain" parameterType="list">
        delete from stdManage
        where mebrNO in
        <foreach collection="list" item="mebrNO" open="(" close=")" separator=",">
            #{mebrNO}
        </foreach>
    </update>


    <!-- 학생이 수료를 하지 못하고 중도하차 하는 경우(상세보기 페이지 삭제)-->
    <delete id="delete" parameterType="Integer">
        delete
        from stdManage
        where mebrNO = #{mebrNO}
    </delete>

    <delete id="deleteAll">
        delete
        from stdManage
    </delete>

    <sql id="searchCondition">
        <choose>
            <when test='option=="T"'>
                and m.name like concat('%',#{keyword},'%')
            </when>
            <when test='option=="W"'>
                and m.id like concat('%',#{keyword},'%')
            </when>
            <when test='option=="R"'>
                and s.gisu like concat('%',#{keyword},'%')
            </when>
            <otherwise>
                and a.status like concat('%',#{keyword},'%')
            </otherwise>
        </choose>
    </sql>

</mapper>
