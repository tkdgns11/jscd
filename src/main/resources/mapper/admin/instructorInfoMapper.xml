<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jscd.app.mapper.instructorInfoMapper">

    <!--강사 정보 관리 -->

    <!-- 회원 정보 관리에서 등급이 강사로 변경 -> 강사 정보 insert -->
    <insert id="insert" parameterType="InstructorInfoDto">
        insert into instructorInfo
            (mebrNO, regDate, modifyDate)
            value (#{mebrNO},now(),now())
    </insert>

    <!--    강사 인원수-->
    <select id="count" resultType="int">
        select count(*)
        from instructorInfo
    </select>

<!--    강사 + 회원 + 코드테이블 조인-->
    <sql id="selectInstructor">
        select i.iscrNO,
               i.mebrNO,
               m.id,
               m.name,
               m.birth,
               m.phone,
               i.intro,
               a.status,
               i.hourPmt,
               m.acct,
               i.regDate,
               i.etc
        from member m
                 join instructorInfo i
                      on i.mebrNO = m.mebrNO
                 join (select ctNum, codeName as status from allCode where ctId = "A001") a
                      on i.status = a.ctNum
    </sql>

    <!-- 강사 전체 정보 확인-->
    <select id="selectAll" parameterType="map" resultType="InstructorMemberInfoDto">
        <include refid="selectInstructor"/>
        order by i.iscrNO asc
        limit #{offset}, #{pageSize};
    </select>

    <!--  강사 정보 상세 확인-->
    <select id="select" parameterType="int" resultType="InstructorMemberInfoDto">
        <include refid="selectInstructor"/>
        where i.mebrNO = #{mebrNO};
    </select>

    <!-- 상세보기 화면 update-->
    <update id="update" parameterType="InstructorInfoDto">
        update instructorInfo
        set
          status     = #{status}
          , hourPmt    = #{hourPmt}
          , etc        = #{etc}
          , modifyDate = now()
        where mebrNO = #{mebrNO}
    </update>

    <!-- 메인화면 상태만 update (일괄 수정 가능)-->
    <update id="updateStatus" parameterType="map">
        update instructorInfo
        set status = ${status}
        , modifyDate = now()
        where mebrNO in
        <foreach collection="mebrNO" item="mebrNO" open="(" close=")" separator=",">
            #{mebrNO}
        </foreach>
    </update>


    <delete id="delete" parameterType="Integer">
        delete
        from instructorInfo
        where mebrNO = #{mebrNO}
    </delete>

    <delete id="deleteAll">
        delete
        from instructorInfo
    </delete>


    <sql id="searchCondition">
        <choose>
            <when test='option=="T"'>
                AND m.name LIKE concat('%', #{keyword}, '%')
            </when>
            <when test='option=="W"'>
                AND m.id LIKE concat('%', #{keyword}, '%')
            </when>
            <otherwise>
                AND a.status LIKE concat('%', #{keyword}, '%')
            </otherwise>
        </choose>
    </sql>

    <!--    검색 조건 select문-->
    <select id="searchSelectPage" parameterType="SearchCondition" resultType="InstructorMemberInfoDto">
        <include refid="selectInstructor"/>
        WHERE true
        <include refid="searchCondition"/>
        order by i.iscrNO asc
        limit #{offset},#{pageSize};
    </select>

    <!--회원컬럼을 조건으로 검색하기 때문에(이름,아이디), 조인 필요-->
    <select id="searchResultCnt" parameterType="SearchCondition" resultType="int">
        SELECT count(*)
        from member m
        join instructorInfo i
        on i.mebrNO = m.mebrNO
        join (select ctNum,codeName as status from allCode where ctId = "A001") a
        on i.status = a.ctNum
        <include refid="searchCondition"/>
    </select>

<!--    마이페이지에서 강사 소개말 작성-->
    <update id="updateIntro" parameterType="InstructorInfoDto">
        update instructorInfo
        set intro = #{intro},
            modifyDate = now()
        where mebrNO = #{mebrNO}
    </update>

</mapper>
