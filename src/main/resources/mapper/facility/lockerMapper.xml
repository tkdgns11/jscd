<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jscd.app.facility.LockerMapper">

    <!--    사용기간 3일남은 락커들 뽑기-->
    <select id="selectAlert" resultType="map">
<![CDATA[
        SELECT
            e.name AS name,
            e.id AS email,
            m.lockerCode AS lockerCode,
            m.lockerID AS lockerID
        FROM
            member e
                JOIN
            (SELECT ld.*
             FROM lockerDetail ld
                      INNER JOIN
                  (SELECT lockerID, MAX(historyNO) AS MaxHistoryNO
                   FROM lockerDetail
                   GROUP BY lockerID) recentRow
                  ON ld.lockerID = recentRow.lockerID AND ld.historyNO = recentRow.MaxHistoryNO
             WHERE DATEDIFF(ld.endDate, CURDATE()) = 3) m
            ON
                e.ID = m.mebrID;
        ]]>
    </select>

    <!--    사용기간 종료된 락커 선택-->
    <select id="selectExpiredLockers" resultType="LockerDto">
        SELECT ld.*
        FROM lockerDetail ld
                 INNER JOIN (
            SELECT lockerID, MAX(historyNO) AS MaxHistoryNO
            FROM lockerDetail
            GROUP BY lockerID
        ) AS sub ON ld.lockerID = sub.lockerID AND ld.historyNO = sub.MaxHistoryNO
        WHERE DATEDIFF(ld.endDate, CURDATE()) = -1
          AND ld.statusCode = 1;
    </select>



    <!-- 관리자 락커 사용중인 회원 조회-->
    <select id="adminSelectLockers" resultType="LockerDto">
        SELECT
            ld.lockerCode AS lockerCode,
            ld.lockerID AS lockerID,
            CAST(ld.lockerNO AS CHAR) AS lockerNo,
            (SELECT m.name FROM member m WHERE m.id = ld.mebrID) AS name,
            ld.mebrID AS mebrID,
            DATE_FORMAT(ld.endDate, '%Y-%m-%d') AS endDateString,
            CAST(DATEDIFF(ld.endDate, CURDATE()) AS CHAR) AS remainDays
        FROM
            lockerDetail ld
                INNER JOIN
            (SELECT lockerID, MAX(historyNO) AS MaxHistoryNO
             FROM lockerDetail
             GROUP BY lockerID) groupedld
            ON
                        ld.lockerID = groupedld.lockerID AND ld.historyNO = groupedld.MaxHistoryNO;
    </select>

    <!-- 일반회원 락커 사용중인 회원 조회-->
    <select id="mebrSelectLockers" resultType="LockerDto">
        SELECT
            ld.lockerCode AS lockerCode,
            ld.lockerID AS lockerID,
            CAST(ld.lockerNO AS CHAR) AS lockerNo,
            ld.mebrID AS mebrID
        FROM
            lockerDetail ld
                INNER JOIN
            (SELECT lockerID, MAX(historyNO) AS MaxHistoryNO
             FROM lockerDetail
             GROUP BY lockerID) groupedld
            ON
                        ld.lockerID = groupedld.lockerID AND ld.historyNO = groupedld.MaxHistoryNO;
    </select>

    <!-- mebrID로 사용중인 락커 조회-->
    <select id="SelectMebrLockers" parameterType="String" resultType="LockerDto" >
        SELECT
            ld.lockerCode AS lockerCode,
            ld.lockerID AS lockerID,
            CAST(ld.lockerNO AS CHAR) AS lockerNo,
            (SELECT m.name FROM member m WHERE m.id = ld.mebrID) AS name,
            ld.mebrID AS mebrID,
            DATE_FORMAT(ld.endDate, '%Y-%m-%d') AS endDateString,
            CAST(DATEDIFF(ld.endDate, CURDATE()) AS CHAR) AS remainDays
        FROM
            lockerDetail ld
                INNER JOIN
            (SELECT lockerID, MAX(historyNO) AS MaxHistoryNO
             FROM lockerDetail
             GROUP BY lockerID) groupedld
            ON ld.lockerID = groupedld.lockerID AND ld.historyNO = groupedld.MaxHistoryNO
        WHERE
            ld.mebrID = #{mebrId};
    </select>

    <!-- 특정 락커 정보 조회 -->
    <select id="selectLockerByIdForUpdate" parameterType="String" resultType="LockerDto">
        SELECT *
        FROM lockerDetail
        WHERE lockerID = #{lockerId} AND historyNO = (
            SELECT MAX(historyNO)
            FROM lockerDetail
            WHERE lockerID = #{lockerId}
        ) FOR UPDATE
    </select>

    <!-- 락커 삭제 -->
    <insert id="deleteLocker" parameterType="LockerDto">
        INSERT INTO lockerDetail
        (lockerID, lockerCode, lockerNO, statusCode, startDate, endDate, etc, regDate)
        VALUES (#{lockerID}, #{lockerCode}, #{lockerNO}, #{statusCode} , now(), '9999-12-31', #{etc}, now())
    </insert>

    <!--    새로운 락커 등록-->
    <insert id="insertLocker" parameterType="LockerDto">
        INSERT INTO lockerDetail
        (lockerID, lockerCode, lockerNO, statusCode, mebrID, startDate, endDate, etc, regDate)
        VALUES (#{lockerID}, #{lockerCode}, #{lockerNO}, #{statusCode}, #{mebrID}, #{startDate}, #{endDate}, #{etc}, now())
    </insert>

    <!--  락커 기간연장 등록-->
    <insert id="insertExtendsLocker" parameterType="LockerDto">
        INSERT INTO lockerDetail
        (lockerID, lockerCode, lockerNO, statusCode, mebrID, startDate, endDate, etc, regDate)
        VALUES (#{lockerID},
                #{lockerCode},
                #{lockerNO},
                #{statusCode},
                #{mebrID},
                now(),
                DATE_ADD(#{endDate}, INTERVAL #{extdDays} DAY),
                #{etc},
                now())
    </insert>

    <!--  자리이동 락커 등록-->
    <insert id="insertMoveLocker" parameterType="LockerDto">
        INSERT INTO lockerDetail
        (lockerID, lockerCode, lockerNO, statusCode, mebrID, startDate, endDate, etc, regDate)
        VALUES (#{lockerID}, #{lockerCode}, #{lockerNO},  #{statusCode}, #{mebrID}, #{startDate}, #{endDate}, #{etc}, now())
    </insert>

    <!--  기간 만료전 자리 삭제-->
    <insert id="insertForEndingUsage" parameterType="LockerDto">
        INSERT INTO lockerDetail
        (lockerID, lockerCode, lockerNO, statusCode, mebrID, startDate, endDate, etc, regDate)
        VALUES (#{lockerID}, #{lockerCode}, #{lockerNO},  #{statusCode}, #{mebrID}, #{startDate}, now(), #{etc}, now())
    </insert>

</mapper>
