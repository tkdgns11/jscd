<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jscd.app.lecture.lstRegist.lstRegistMapper">
    <!--       전체 게시물 개수-->
    <select id="count" resultType="int">
        select count(*)
        from lstRegist
    </select>

    <!--       부트캠프 게시물 갯수 -->
    <select id="countBT" resultType="int">
    <![CDATA[
        SELECT COUNT(*)
        FROM lstRegist
        WHERE courseCode = '1'
          AND startDate <= CURDATE();
        ]]>
    </select>

    <!--       세미나 게시물 갯수-->
    <select id="countSM" resultType="int">
        <![CDATA[
        SELECT COUNT(*)
        FROM lstRegist
        WHERE courseCode = '2'
          AND startDate <= CURDATE();
        ]]>
    </select>

<!--    (회원)부트캠프 페이징 처리를 위한 부트캠프 게시물 카운팅-->
    <select id="bootCampCount" resultType="int">
        SELECT COUNT(*)
        FROM lstRegist
        WHERE courseCode like 1
    </select>
<!--    (회원)세미나 페이징 처리를 위한 세미나 게시물 카운팅-->
    <select id="seminarCount" resultType="int">
        SELECT COUNT(*)
        FROM lstRegist
        WHERE courseCode not like 1
    </select>
    <!--   진행예정 부트캠프 게시물 개수 -->
    <select id="countAppointBT" resultType="int">
        select count(*)
        from lstRegist
        where coursecode like 1 and status like "진행예정"
    </select>
    <!--   진행예정 세미나 게시물 개수 -->
    <select id="countAppointSM" resultType="int">
        select count(*)
        from lstRegist
        where coursecode not like 1 and status like "진행예정"
    </select>
    <!--   진행 중 부트캠프 게시물 개수 -->
    <select id="countProcessBT" resultType="int">
        select count(*)
        from lstRegist
        where coursecode like 1 and status like "진행 중"
    </select>
    <!--   진행 중 세미나 게시물 개수 -->
    <select id="countProcessSM" resultType="int">
        select count(*)
        from lstRegist
        where coursecode not like 1 and status like "진행 중"
    </select>


    <!--      강의 등록하기 -->
    <insert id="insert" parameterType="lstRegistDto">
        insert into lstRegist (title, discription, courseCode, courseCategory,
        subject1, subject2, subject3, subject4, subject5,
        price1, price2, price3, price4, price5,
        onOff, status, minNum, maxNum, location, startDate, endDate, startTime, endTime,
        name, book, material, totalPrice, discount, lastPrice,
        content)
        values (#{title}, #{discription}, #{courseCode}, #{courseCategory},
        #{subject1}, #{subject2}, #{subject3}, #{subject4}, #{subject5},
        #{price1}, #{price2}, #{price3}, #{price4}, #{price5},
        #{onOff}, #{status}, #{minNum}, #{maxNum}, #{location}, #{startDate}, #{endDate}, #{startTime}, #{endTime},
        #{name}, #{book}, #{material}, #{totalPrice}, #{discount}, #{lastPrice},
        #{content})
        <selectKey keyProperty="registCode" resultType="lstRegistDto" order="AFTER">
            SELECT *
            FROM lstRegist
            WHERE registCode = LAST_INSERT_ID()
        </selectKey>
    </insert>

    <!--       등록된 강의 조회하기-->
    <sql id="selectFromlstRegist">
        select *
        from lstRegist
    </sql>

    <!--       강의 조회하기-->
    <select id="selectAll" resultType="lstRegistDto">
        <include refid="selectFromlstRegist"/>
        order by regDate desc, registCode desc
    </select>

    <!--       강의 세부 사항 조회하기-->
    <select id="select" parameterType="int" resultType="map">
        select lr.*,c.courseName
        FROM lstRegist lr JOIN course c ON lr.courseCode = c.courseCode
        where lr.registCode = #{registCode}
    </select>

    <!--    등록된 강의 수정하기-->
    <update id="update" parameterType="lstRegistDto">
        update lstRegist
        set title = #{title}, discription = #{discription}, onOff = #{onOff}, status = #{status}, courseCategory = #{courseCategory},
            minNum = #{minNum}, maxNum = #{maxNum}, startDate = #{startDate}, endDate = #{endDate}, startTime=#{startTime}, endTime=#{endTime},
            name=#{name}, book = #{book}, material = #{material}, totalPrice = #{totalPrice}, discount = #{discount}, lastPrice = #{lastPrice},
            content = #{content}, etc = #{etc}
        where registCode = #{registCode}
    </update>

    <!--    전체 강의 삭제-->
    <delete id="deleteAll">
        delete from lstRegist
    </delete>

    <!--    강의 삭제하기-->
    <delete id="delete" parameterType="map">
        delete from lstRegist
        where registCode = #{registCode}
    </delete>

    <sql id="searchCondition">
        <choose>
            <when test='option=="T"'>
                AND title LIKE concat('%', #{keyword}, '%')
            </when>
            <when test='option=="W"'>
                AND writer LIKE concat('%', #{keyword}, '%')
            </when>
            <otherwise>
                AND (title   LIKE concat('%', #{keyword}, '%')
                OR   content LIKE concat('%', #{keyword}, '%'))
            </otherwise>
        </choose>
    </sql>

    <select id="searchSelectPage" parameterType="SearchCondition" resultType="lstRegistDto">
        SELECT registCode, title, regDate
        FROM  lstregist
        WHERE true
        <include refid="searchCondition"/>
        ORDER BY regDate DESC, registCode DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <select id="searchResultCnt" parameterType="SearchCondition" resultType="int">
        SELECT count(*)
        FROM  lstRegist
        WHERE true
        <include refid="searchCondition"/>
    </select>

    <!--    (회원) 신청 세미나 리스트-->
    <select id="seminarList" resultType="lstregistfileDto">
        select *
        from lstRegist lr right Join lstregistfile lf on lr.registCode = lf.registCode
        where courseCode NOT LIKE 1
        ORDER BY lr.regDate DESC, lr.registCode DESC
    </select>

    <!--    (회원) 세미나 리스트 페이징 처리 -->
    <select id="seminarPaging" parameterType="map" resultType="lstregistfileDto">
        select *
        from lstRegist lr right Join lstregistfile lf on lr.registCode = lf.registCode
        where courseCode NOT LIKE 1
        ORDER BY lr.regDate DESC, lr.registCode DESC
            limit #{offset}, #{pageSize}
    </select>

    <!--    (회원) 진행예정 세미나 리스트 페이징 처리-->
    <select id="appointSMList" parameterType="map" resultType="lstregistfileDto">
        select *
        from lstRegist lr right join lstregistfile lf on lr.registCode = lf.registCode
        where lr.courseCode NOT LIKE 1 AND lr.status like "진행예정"
        order by lr.regDate desc, lr.registCode desc
            limit #{offset}, #{pageSize}
    </select>

    <!--    (회원) 진행 중 세미나 리스트 페이징 처리-->
    <select id="processSMList" parameterType="map" resultType="lstregistfileDto">
        select *
        from lstRegist lr right join lstregistfile lf on lr.registCode = lf.registCode
        where lr.courseCode NOT LIKE 1 AND lr.status like "진행 중"
        order by lr.regDate desc, lr.registCode desc
            limit #{offset}, #{pageSize}
    </select>

    <!--    (회원) 세미나 세부 사항 -->
    <select id="seminarDetail" parameterType="int" resultType="lstRegistDto">
        <include refid="selectFromlstRegist"/>
        where registCode = #{registCode}
    </select>

    <!--  (회원) 신청 부트캠프 리스트 -->
    <select id="bootCampList" resultType="lstRegistDto">
        <include refid="selectFromlstRegist"/>
        where courseCode LIKE 1
        ORDER BY regDate DESC, registCode DESC
        limit #{offset}, #{pageSize}
    </select>

    <!--    (회원) 부트캠프 리스트 페이징 처리 -->
    <select id="bootCampPaging" parameterType="map" resultType="lstRegistDto">
        <include refid="selectFromlstRegist"/>
        where courseCode like 1
        order by regDate desc, registCode desc
        limit #{offset}, #{pageSize}
    </select>

    <!--    (회원) 진행예정 부트캠프 리스트 페이징 처리-->
    <select id="appointBTList" parameterType="map" resultType="lstRegistDto">
        <include refid="selectFromlstRegist"/>
        where courseCode like 1 and status like "진행예정"
        order by regDate desc, registCode desc
        limit #{offset}, #{pageSize}
    </select>

    <!--    (회원) 진행 중 부트캠프 리스트 페이징 처리-->
    <select id="processBTList" parameterType="map" resultType="lstRegistDto">
        <include refid="selectFromlstRegist"/>
        where courseCode LIKE 1 AND status like "진행 중"
        order by regDate desc, registCode desc
        limit #{offset}, #{pageSize}
    </select>

    <!--    (회원) 부트캠프 세부 사항 -->
    <select id="bootCampDetail" parameterType="int" resultType="lstRegistDto">
        <include refid="selectFromlstRegist"/>
        where registCode = #{registCode}
    </select>

    <!--강의 첨부 파일 업로드 -->
    <insert id="InsertFile" parameterType="hashMap">
        INSERT INTO lstregistfile(registCode, originFileName, storedFileName, fileSize, regDate, firstIdNO)
        VALUES (#{registCode}, #{originFileName}, #{storedFileName}, #{fileSize}, now(), #{firstIdNO})
    </insert>

    <!--강의 첨부 파일 조회-->
    <select id="selectFileList" parameterType="int" resultType="hashMap">
        SELECT fileNo,
               registCode,
               originFileName,
               storedFileName,
               ROUND(fileSize/1024,1) AS fileSize
        FROM lstregistfile
        WHERE registCode = #{registCode}
    </select>

    <!--강의 첨부 파일 다운로드-->
    <select id="selectFileDown" parameterType="hashMap" resultType="hashMap">
        SELECT
            originFileName,
            storedFileName
        FROM lstregistfile
        WHERE fileNo = #{fileNo}
    </select>

    <!--    강의 첨부 파일 삭제하기-->
    <delete id="updateFile" parameterType="hashMap">
        delete from lstregistfile
        WHERE fileNo = #{fileNo}
    </delete>

    <!--    홈 화면 세미나 리스트-->
    <select id="homeSeminarList" resultType="lstRegistDto">
        SELECT registCode, title, discription, regDate
        FROM lstregist
        where status like "진행예정" and courseCode not like 1
        ORDER BY regDate DESC, registCode DESC
            limit 2
    </select>

    <!--    홈 화면 부트캠프 리스트-->
    <select id="homeBootCampList" resultType="lstRegistDto">
        select registCode, courseCode, title, discription, regDate
        from lstregist
        where status like "진행예정" and courseCode like 1
        ORDER BY regDate DESC, registCode DESC
            limit 2
    </select>

    <update id="updateStatus">
        UPDATE lstRegist
        SET status = '진행중'
        WHERE DATE(startDate) = CURDATE()
    </update>

</mapper>
